logging:
  level.root: WARN
  level.no: ${LOG_LEVEL:DEBUG}
  level.org.springframework: WARN
  level.org.springframework.web: WARN
server:
  port: 8080
management:
  endpoint.health.probes.enabled: true
  health:
    livenessState.enabled: true
    readinessState.enabled: true
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SSO_HOST}/auth/realms/fdk
          jwk-set-uri: ${SSO_HOST}/auth/realms/fdk/protocol/openid-connect/certs
application:
  serviceCatalogUri: ${SERVICE_CATALOG_URI}
  cors.originPatterns: "${CORS_ORIGIN_PATTERNS}"
  mongodb:
    username: ${MONGO_USERNAME}
    password: ${MONGO_PASSWORD}
    host: ${MONGODB_HOST}
    auth: ${MONGODB_AUTH}
    rs: ${MONGODB_REPLICASET}
    db: serviceCatalog
---
spring:
  config.activate.on-profile: test
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:5050/auth/realms/fdk
          jwk-set-uri: http://localhost:5050/auth/realms/fdk/protocol/openid-connect/certs
application:
  serviceCatalogUri: http://localhost:5050
  cors.originPatterns: "*"
  mongodb:
    username: testuser
    password: testpassword
    auth: admin
    rs:
---
spring:
  config.activate.on-profile: dev
  data.mongodb.uri: mongodb://root:admin@localhost:27017/serviceCatalog?authSource=admin&replicaSet=replicaset
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk
          jwk-set-uri: https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk/protocol/openid-connect/certs
application:
  serviceCatalogUri: http://localhost:8080
  cors.originPatterns: "*"
  mongodb:
    username: root
    password: admin
    host: localhost:27017
    auth: admin
    rs:
