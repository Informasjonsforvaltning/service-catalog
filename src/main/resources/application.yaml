logging:
  level.root: WARN
  level.no: ${LOG_LEVEL:DEBUG}
  level.org.springframework: WARN
  level.org.springframework.web: WARN
server:
  port: 8080
management:
  endpoint.health.probes.enabled: true
  health:
    livenessState.enabled: true
    readinessState.enabled: true
spring:
  data.mongodb:
      host: ${MONGODB_HOST}
      username: ${MONGO_USERNAME}
      password: ${MONGO_PASSWORD}
      authentication-database: ${MONGODB_AUTH}
      replica-set-name: ${MONGODB_REPLICASET}
      port: 27017
      database: serviceCatalog
      auto-index-creation: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SSO_HOST}/auth/realms/fdk
          jwk-set-uri: ${SSO_HOST}/auth/realms/fdk/protocol/openid-connect/certs
application:
  serviceCatalogUri: ${SERVICE_CATALOG_URI}
  cors.originPatterns: "${CORS_ORIGIN_PATTERNS}"
---
spring:
  config.activate.on-profile: test
  data:
    mongodb:
      host: localhost
      username: testuser
      password: testpassword
      authentication-database: admin
      replica-set-name: null
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:5050/auth/realms/fdk
          jwk-set-uri: http://localhost:5050/auth/realms/fdk/protocol/openid-connect/certs
application:
  serviceCatalogUri: http://localhost:5050
  cors.originPatterns: "*"
---
spring:
  config.activate.on-profile: dev
  data:
    mongodb:
      host: localhost
      username: root
      password: adm?i=n
      authentication-database: admin
      replica-set-name: null
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk
          jwk-set-uri: https://sso.staging.fellesdatakatalog.digdir.no/auth/realms/fdk/protocol/openid-connect/certs
application:
  serviceCatalogUri: http://localhost:8080
  cors.originPatterns: "*"
